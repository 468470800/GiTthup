大实训、2020/9/2
-
- 1配置vue.
-
*上午 配置vue4.5.4脚手架  先安装node环境node.js官网下载 常量的 ， 安装vue4.5.4版本脚手架*
* 卸载2.0版本npm uninstall -g vue-cli 安装4.5.4版本 命令npm i -个@vue/cli   查看vue -V
* 当前版本。
* 创建项目 vue create 项目名称  
- 2创建项目.
-
创建过程百度
*vue项目文件目录 介绍*
**assets:资源文件字体图片  图标
components:存放公共组件
router:路由文件
store:vuex状态管理
views:存放页面
filters:存放过滤文件、
directives:存放自定义指令文件
mixins:存放混入方法
utils:存放一些 封装的公共方法 js文件
http:存放封装的http接口请求
App.vue 根组件
main.js 项目执行的入口js**
- 3打包.
-
在当前项目 cd 项目名称 找到 router 文件夹下的 index.js 注释  // mode: "history",哈希值
**创建一个文件vue.config.js**

module.exports = {
    publicPath:'./',//打包工具
    devServer : {
            port : 9090,//该端口号
            // open :true,//启动服务器打开浏览器
               https : false,//是否启动http协议 ，false为不启动
            host: "localhost",//主机名字
    },
    // productionSourceMap : false//打包时不生成map后缀名文件
}
打包指令 yarn build或者npm run build
- 4配置vue脚手架. 
-
在百度搜索一下代码 vue代码片段 在配置到编辑器中 ok了
├── README.md            项目介绍
├── index.html           入口页面
├── build              构建脚本目录
│  ├── build-server.js         运行本地构建服务器，可以访问构建后的页面
│  ├── build.js            生产环境构建脚本
│  ├── dev-client.js          开发服务器热重载脚本，主要用来实现开发阶段的页面自动刷新
│  ├── dev-server.js          运行本地开发服务器
│  ├── utils.js            构建相关工具方法
│  ├── webpack.base.conf.js      wabpack基础配置
│  ├── webpack.dev.conf.js       wabpack开发环境配置
│  └── webpack.prod.conf.js      wabpack生产环境配置
├── config             项目配置
│  ├── dev.env.js           开发环境变量
│  ├── index.js            项目配置文件
│  ├── prod.env.js           生产环境变量
│  └── test.env.js           测试环境变量
├── mock              mock数据目录
│  └── hello.js
├── package.json          npm包配置文件，里面定义了项目的npm脚本，依赖包等信息
├── src               源码目录  
│  ├── main.js             入口js文件
│  ├── app.vue             根组件
│  ├── components           公共组件目录
│  │  └── title.vue
│  ├── assets             资源目录，这里的资源会被wabpack构建
│  │  └── images
│  │    └── logo.png
│  ├── routes             前端路由
│  │  └── index.js
│  ├── store              应用级数据（state）
│  │  └── index.js
│  └── views              页面目录
│    ├── hello.vue
│    └── notfound.vue
├── static             纯静态资源，不会被wabpack构建。
└── test              测试文件目录（unit&e2e）
  └── unit              单元测试
    ├── index.js            入口脚本
    ├── karma.conf.js          karma配置文件
    └── specs              单测case目录
      └── Hello.spec.js







