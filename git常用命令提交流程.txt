创建分支：git checkout -b login

查看分支：git branch

查看当前分支的状态：git status

添加到暂存区：git add .

提交+注释：git commit -m "这里是注释"

切换分支：git checkout master

合并分支：git merge login

远程推送：git push

推送新的分支，首先切换到要推送的分支，使用以下的命令，我这里是login分支：git push -u origin login





### Git 仓库 ：

#####  什么是仓库

在 Git 的概念中，仓库，就是你存在`.git`目录的那个文件夹内的所有文件，包括隐藏的文件，Git程序会再当前目录以及上级目录查找是否存在`.git`文件，如果存在，则会将`.git`目录存在的文件夹开始下的所有文件当成你需要管理的文件，所以，我们如果想将某个文件夹当做一个Git仓库，你可以在那个文件夹下通过终端(Window为Cmd或者PoewrShell或者Bash)来执行

##### 概念：

Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或大或小的项目。

版本控制工具

**git 的本地操作**：

1. ```
   1. git init (初始化)
   
   2. git status (查看本地代码状态，比如有无加到暂存区，有无加到本地版本库)
   
   3. git add <fileName> (加到暂存区 常用git add .)
   
   4. git commit -m "描述" (加到本地版本库)
   
   5. git rm <fileName> (删除文件并删除本地跟踪)
   ```

   

**git 推送到远程版本库**：

1. ```
   1. git push <远程仓库地址：有https 和 ssh 两种地址> master (master 是本地的主分支)
   
   2. git remote add <别名> <远程仓库地址：有https 和 ssh 两种地址> (给远程仓库设置别名)
   
   3. git remote -v (查看远程仓库的别名)
   
   4. git remote remove <已经设置的别名>
   
   5. ssh -keygen -t rsa -C <邮件地址> (配置公钥)
   ```

   

**git 的克隆和更新**：

1. ```
   1. git init 初始化
   2. git clone 克隆代码
   3. ls 查看目录
   4. cd 进入目录
   5. git add  . 加到暂存区 
   6. git commit -m "备注"  加到本地版本库
   7. git remote add origin 仓库地址 (推送本地仓库)
   8. git pull origin master 
   9. git remote -v (查看信息)
   10. git push -u origin master (origin 远程仓库的别名 master 主分支)
   ```

   

**git的分支管理**：

1. ```
   1. git branch (查看分支)
   
   2. git branch - <新的分支名称> (创建分支)
   
   3. git checkout <分支名称> (切换分支)
   
   4. git merge <分支名称> (合并分支 ：一般先切回主分支，再合并其他分支，合并可能造成冲突 需要解决冲突再提交)
   
   5. git branch -d <分支名称> (删除分支)
   ```

   

**git 工作流**：

- 集中式工作流

- 功能分支工作流

- git_flow工作流

- forKing 工作流

- pull request

**git 推送分支到远程仓库**

git push origin <本地分支名>:<远程分支名>

**git 更新分支内容到本地**

git pull origin <分支名>



#####  什么是撤销

撤销命令使用是非常频繁的，因为某些原因，我们不再需要我们的改动或者新的改动有点问题，我们需要回退到某个版本，这时就需要用到撤销命令，或者说这个应该翻译成重置更加恰当。具体命令如下:

##### 撤销当前的修改:

```
git reset --hard
```



#####  什么是版本

严格来讲，Git并不存在版本的概念，但人们也硬是发展出了这么个玩意，在Git中，计数基础是提交，即我们常说的Commit，我们每做一点更改便可以产生一次提交，当提交累计起来，可以作为产品定型时，就在当前的Commit上打上一个标记，将这个标记我们称之为版本多少多少，那么就算完成了一个版本，标记本身被称之为Tag，请注意，在Git中，版本仅仅只是某一个提交的标签，并没有其他意义，Git本身也仅有打标签的功能，并没有版本功能，版本功能是根据Tag来扩展的，Git本身并没有



##### 什么是同步

同步，也可以称之为拉取，在Git中是非常频繁的操作，和SVN不同，Git的所有仓库之间是平等的，所以，为了保证代码一致性，尽可能的在每次操作前进行一次同步操作，具体的为在工作目录下执行如下命令:





#####  什么是推送

和拉取一样，也是一个非常频繁的操作，当你代码有更新时，你需要更新到远程仓库，这个动作被称之为推送，执行的命令与拉取一样，只是将其中的`pull`这个单词改成`push`，同样，如果远程仓库存在你本地仓库没有的更新，则在推送前你需要先进行一次同步，如果你确定你不需要远程的更新，则在推送时加上 `-f` 选项，则可以强制推送，注:在协同开发中，我并不建议这么做，因为这样很可能覆盖别人的代码